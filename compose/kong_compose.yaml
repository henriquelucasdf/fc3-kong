version: "3.7"

networks:
  kong-fc:
    external: false

volumes:
  postgres_data:
    driver: local

services:
  ### Database architecture deployment
  kong-database:
    image: postgres:9.5
    deploy:
      restart_policy:
        condition: always
    networks:
      - kong-fc
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  ### Pre config: Create tables in db
  kong-migration-bootstrap:
    image: henriquelucasdf/kong-fc
    build:
      context: .
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - kong-fc
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap

  ### Configs: configure the tables and add default values
  kong-migration-up:
    image: henriquelucasdf/kong-fc
    build:
      context: .
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - kong-fc
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations up

  ### Kong API Gateway: Kong runtime container
  kong:
    container_name: kong
    image: henriquelucasdf/kong-fc
    build:
      context: .
    networks:
      - kong-fc
    deploy:
      restart_policy:
        condition: always
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl http2
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_REAL_IP_RECURSIVE=on
      - KONG_NGINX_HTTP_RESOLVER=8.8.8.8
      - KONG_PLUGINS=bundled
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://kong:8001/status"]
      interval: 5s
      retries: 10
    restart: on-failure

  ### Players
  ### Mock microsservice to simulate users
  ###
  players:
    image: claudioed/players
    networks:
      - kong-fc
    deploy:
      restart_policy:
        condition: on-failure

  ###
  ### Championships
  ### Mock microsservice to simulate championships
  ###
  championships:
    image: claudioed/championships
    networks:
      - kong-fc
    deploy:
      restart_policy:
        condition: on-failure

  ###
  ### Matches
  ### Mock microsservice to simulate matches
  ###
  matches:
    image: claudioed/matches
    networks:
      - kong-fc
    deploy:
      restart_policy:
        condition: on-failure

  ###
  ### Bets
  ### Mock microsservice to simulate bets
  ###
  bets:
    image: claudioed/bets
    networks:
      - kong-fc
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - "9999:9999"
    environment:
      - MATCH_SVC=http://matches:9999/api/matches/6c51d4dd-e277-4282-9c51-871ba7fb16b3
      - CHAMPIONSHIP_SVC=http://championships:9999/api/championships/144954fe-b6c3-4a51-80d3-92911a06265c
      - PLAYER_SVC=http://players:9999/api/players/144954fe-b6c3-4a51-80d3-92911a06265c

  # Postgres for keycloak
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password

  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  ### Konga
  ### Api gateway management using graphic interface
  konga:
    image: pantsel/konga
    networks:
      - kong-fc
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - kong-database
    environment:
      NODE_ENV: development
    ports:
      - "1337:1337"
